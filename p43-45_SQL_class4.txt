
--3.nchar
--It is static memory allocation and it can store 4000 charecters (1 char it will occupy 2bytes)
declare @value nchar(4000) = 'AMAR'
print @value
print datalength(@value)
print len(@value)
--4.nvarchar
--It is dynamic memory allocation and it can store 4000 charecters (1 char it will occupy 2bytes).

declare @value1 nvarchar(4000) = 'AMAR'
print @value1
print datalength(@value1)
print len(@value1)

--4.date and Time data type 
--1.date 
--It will allow you to insert the date in multiple formats 
--For Ex: YYYY/MM/DD,DD/MM/YYYY,YYYY/DD/MM etc 
select GETDATE()

declare @date1 date = getdate()
print @date1
--2.time 
--it will allow you to insert the time in below format
--HH:MM:SS:MS

declare @time time  = getdate()
print @time

--3.Datetime
--It will allow you to insert date and time together.
--YYYY/MM/DD HH:MM AM/PM

declare @datetime datetime  = getdate()
print @datetime

--SQL statements
--There are four types of SQL statements 
--1.DDL(Data Defination lamguage) -- Table level operation.
--2.DML(Data Manipulation Language) --Data stored inside the table
--3.DCL(Data Control Language)
--4.TCL(Transction Control Language)

--Class-3
--1.DDL(Data Defination lamguage) 
--These statements are basically used to perform structure related operation w.r.to table.
--Create,Drop,Truncate,Alter,Rename 

--Q.How will you insert the data into the table?
--INSERT
--Insert Statement is used to insert the data into the table.
--By two ways we can insert the data into the table
--METHOD-I
--We have to insert the data sequence wise how we have created the table
insert into FirstTable values(1,'Praveen','Patil','Pune',30);

insert into FirstTable values(1,'Praveen','Patil','Pune'); --Erorr -Column name or number of supplied values does not match table definition.

select * from FirstTable

--METHOD-II
--We dont have restrictions to insert the data as per column sequence defined in table.
--While inserting the data we have to mention column names in insert statement.
insert into FirstTable (FID,FirstName) values (2,'Amit')

insert into FirstTable (FirstName,FID,Age,LastName) values ('Puneet',3,24,'sharma');

insert into FirstTable (Age,FID,FirstName,LastName) values (35,4,'Puskar','Verma')
insert into FirstTable (Age,FID,FirstName,LastName) values (27,5,'Meena','Patil')

select * from FirstTable

--Clauses/filters 
--We have Clausses in Sql to perform filter related information
--1.Where
--2.order by
--3.group by
--4.having 

select * from FirstTable

--1.Where
--Where clause is used with comaprision operator,arithmatic and logical operators.
--It used to filter the specific condition or we can select a particlar records from table.

--Operators
--1.Comaprision Operator 
--2.Logical Operator
--3.Arithmatic operator
--4.IN and NOT IN
--5.Between and NOT BETWEEN
--6.LIKE

--1.Comaprision Operator 
--it is used to compare the condition provided in filter clauses or where clause.
-- = - equal to
-- > - greater than
-- < - less than
-- >= - greater than equal to
-- <= - less than equal to
-- != or <> -not equal to


create table employee
(EID int,
FirstName varchar(20),
LastName varchar(20),
Loc varchar(20),
Dept varchar(20),
salary int)

insert into employee values (1,'Rohan','Mane','Sangali','HR',15000)
insert into employee values (2,'Sheetal','Chavan','Parbhani','Finance',25000)
insert into employee values (3,'Amit','Patil','Latur','HR',16000)
insert into employee values (4,'Riya','Verma','Pune','Account',20000)
insert into employee values (5,'Sita','Sharma','Patna','HR',15000)
insert into employee values (6,'Kirti','Gold','Solapur','Staffing',35000)
insert into employee values (7,'Sohan','Jadhav','Miraj','Account',45000)
insert into employee values (8,'Priyanka','Sharma','Nagpur','Finance',46000)
insert into employee values (9,'Virat','Patil','Jaipur','Staffing',34000)
insert into employee values (10,'Sohil','Khan','Mumbai','HR',33000)
insert into employee values (11,'Ronit','Patil','Miraj','Admin',NULL)
select * from employee where dept = 'HR'
select * from employee where EID > 5
select * from employee where EID < 4
select * from employee where EID >= 7
select * from employee where EID <= 4
select * from employee where EID <> 7  --not equal to
select * from employee where EID != 7  --not equal to

--Logical Operator 
--these operators are used to compare two inputs logically and provide the result.
--1.AND
--It will be just like multiplication 

--AND oeartion
--A		B		O/P
--0		0		0
--0		1		0
--1		0		0
--1		1		1

--A			B			O/P
--False		False		False
--False		True		False
--True		False		False
--True		True		True

select * from employee where eid = 1 and dept = 'Finance'
select * from employee where EID =5 and loc ='Patna'

--2.OR
--It will work like addition
--OR operation
--A		B		O/P
--0		0		0
--0		1		1
--1		0		1
--1		1		1

--A			B			O/P
--False		False		False
--False		True		True
--True		False		True
--True		True		True

select * from employee where eid = 11 or dept = 'Finance'
select * from employee 

select * from employee where EID =5 or salary > 40000 or loc ='Pune'

--3.NOT
--It will perform Negation or Opposite operation

--NOT operation
--Input		Output
--1			0
--True		False
select * from employee where eid in (3,5,7,9,1)
select * from employee where eid not in (3,5,7,9,1)

--IN and NOT IN operator 
--This operator will allow you to navigate or point out the values which mentioned or mentioned inside the in clause.
--Not In operator will perform vice-versa operation as compared to IN operator.

select * from employee where eid => 1,2 -- incoreect syntax because comparision opeartor will allow you to insert only one condition.

select * from employee where eid in (1,3,4,5)
select * from employee where eid not in (1,3,4,5)

select * from employee where loc in ('Pune','sangali','Miraj')
select * from employee where loc not in ('Pune','sangali','Miraj')


--Between and Not between
--This operator/ clause is used to display the values or records between the range you have specified.
--This operator works along with AND operator.

select * from employee where EID between 2 and 6

select * from employee where Loc between 'Agra' and 'Miraj' --A to M cities name 

select * from employee where Loc between 'A' and 'N'   --A to N

--Not Between
select * from employee where EID not between 2 and 6

select * from employee where Loc not between 'Agra' and 'Miraj' --excluding A to Miraj cities name 

select * from employee where Loc not between 'A' and 'N'  -- excluding A to N cities name  <=N ,ex:na,nb



